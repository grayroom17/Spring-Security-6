{
  "id": "90a6fea3-5631-4dbb-9300-907c88acf253",
  "realm": "EazyBank",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "cdec7548-f080-4654-bab3-9a4b8a8fc2a0",
        "name": "default-roles-eazybank",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "90a6fea3-5631-4dbb-9300-907c88acf253",
        "attributes": {}
      },
      {
        "id": "67e0cdd5-1af7-4559-95e7-fab9cb1f2d81",
        "name": "ADMIN",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "90a6fea3-5631-4dbb-9300-907c88acf253",
        "attributes": {}
      },
      {
        "id": "be54042a-67e1-415e-9bb2-04911743c396",
        "name": "USER",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "90a6fea3-5631-4dbb-9300-907c88acf253",
        "attributes": {}
      },
      {
        "id": "01851596-b1cb-4002-97ea-144f34032d94",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "90a6fea3-5631-4dbb-9300-907c88acf253",
        "attributes": {}
      },
      {
        "id": "ea799d05-2bc2-4d56-9b3c-eef6900804b5",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "90a6fea3-5631-4dbb-9300-907c88acf253",
        "attributes": {}
      }
    ],
    "client": {
      "eazy-bank-api": [],
      "eazy-bank-client": [],
      "realm-management": [
        {
          "id": "0687c906-4c33-4d5a-853d-acc7dc4a09b4",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "8feb17e1-638b-4eb4-b8e7-418beddf9f53",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "587379e3-728e-4d0e-a02d-726ba4e946df",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "a678acaa-de3c-437e-bd51-d67b100121a3",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "43f99ee9-62ee-40c0-95ad-90799216d268",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "e4f189ca-1c8d-449a-97f2-729ef4fd2a4e",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "73c05e3d-40dc-40e5-b942-5c5e5a7706ef",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "ce47610a-fc62-45a6-b273-9b7c517c49e7",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "bc14a16e-82b2-4c45-9142-9edcf735d925",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "967a251f-fe0b-446b-a415-72df5018b830",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "manage-clients",
                "view-realm",
                "view-identity-providers",
                "view-clients",
                "view-users",
                "query-groups",
                "impersonation",
                "create-client",
                "query-realms",
                "view-events",
                "query-clients",
                "manage-realm",
                "view-authorization",
                "manage-users",
                "manage-identity-providers",
                "manage-authorization",
                "manage-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "d94f4830-02ab-4c66-9d6e-9d6ba74cf613",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "d4863525-249e-4f7c-801c-ae0fcf131cf5",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "7110f411-6a95-4f3f-a2f9-3672054e4989",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "538af7cc-2ea2-4b3a-8805-a5f0a601fa63",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "df0e19a7-71cd-4e96-bb83-df98b797a152",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "da4fbfdc-cc92-41e0-aa6f-f3805b600d66",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "b05082d2-4d06-4c25-8046-a43b472d2281",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "680130c3-f793-4b5f-bfab-579de5efd445",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        },
        {
          "id": "10b2bb2f-4b9d-4780-baa9-999fa1871522",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "4dc7d33e-a21e-4820-9d79-e859461920a1",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "ui-client": [],
      "account-console": [],
      "broker": [
        {
          "id": "7aa214c0-f455-495f-913f-e36e01c5cdad",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "fee3ee32-aa33-4a3a-9ad5-b5c78db3eccd",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "c134850f-70ed-4618-ab77-999188646ddc",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "c8491879-7057-43db-ab7d-98bc6259b45e",
          "attributes": {}
        },
        {
          "id": "c328f465-3e0b-4d4c-b483-0c1b74d4b51a",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "c8491879-7057-43db-ab7d-98bc6259b45e",
          "attributes": {}
        },
        {
          "id": "8762770d-6d06-4f95-b3fb-a69359a29d5a",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "c8491879-7057-43db-ab7d-98bc6259b45e",
          "attributes": {}
        },
        {
          "id": "c5c1ab36-b834-40a7-919e-030f2dcc1886",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "c8491879-7057-43db-ab7d-98bc6259b45e",
          "attributes": {}
        },
        {
          "id": "b32e7361-b6cf-4bc1-b409-705ad61ae705",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "c8491879-7057-43db-ab7d-98bc6259b45e",
          "attributes": {}
        },
        {
          "id": "cfac74f4-58e0-47df-90cb-1864fae8213b",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "c8491879-7057-43db-ab7d-98bc6259b45e",
          "attributes": {}
        },
        {
          "id": "b8c32e0c-9279-4f12-9294-1f31d792b2d0",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "c8491879-7057-43db-ab7d-98bc6259b45e",
          "attributes": {}
        },
        {
          "id": "54c42778-ff13-418b-a72d-b5a54fa68877",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "c8491879-7057-43db-ab7d-98bc6259b45e",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "cdec7548-f080-4654-bab3-9a4b8a8fc2a0",
    "name": "default-roles-eazybank",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "90a6fea3-5631-4dbb-9300-907c88acf253"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppMicrosoftAuthenticatorName",
    "totpAppGoogleName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "4bde33c6-b4da-4af9-b1b7-6edc91463348",
      "createdTimestamp": 1702398166849,
      "username": "happy@example.com",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Happy",
      "lastName": "Example",
      "email": "happy@example.com",
      "credentials": [
        {
          "id": "fd347bad-0bd5-4671-9b66-9c3cf61a2b72",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1702398212269,
          "secretData": "{\"value\":\"Q3bV3+DtZIinlQrw9GhHyjYuFfUnLWbZ5QselIM78So=\",\"salt\":\"D2aBCTv8H1o3GE0J9uHWDw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-eazybank",
        "ADMIN",
        "USER"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f00b3977-39bb-4747-ab6d-dc14edd9dff6",
      "createdTimestamp": 1702309182916,
      "username": "service-account-eazy-bank-api",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "eazy-bank-api",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-eazybank",
        "ADMIN",
        "USER"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "c8491879-7057-43db-ab7d-98bc6259b45e",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/EazyBank/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/EazyBank/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bc19aba4-18e8-42da-9098-94aab9ece0db",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/EazyBank/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/EazyBank/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "0f38e8b2-8661-4759-9223-752f329e3934",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "924efd3e-e290-482e-bf70-00e1a1af6812",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fee3ee32-aa33-4a3a-9ad5-b5c78db3eccd",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "89773d31-4887-48e2-bec4-f7f2a0d7737b",
      "clientId": "eazy-bank-api",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "J0XvI319ejD1XJrKAjf4NUChZnHBIGY5",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1702309182",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3da96134-bd3f-4464-a034-3bef900039a6",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d3104fd1-9a54-4103-a381-13ca867f4c92",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b733ae63-967f-4e42-b4e8-431a63de3396",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "606735f8-152e-47b9-a8e7-cf95b70f238b",
      "clientId": "eazy-bank-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "V1aLSSSOBnQIJY3ULv20pTkM1diOmRze",
      "redirectUris": [
        "http://localhost:7777/random"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1702398028",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4dc7d33e-a21e-4820-9d79-e859461920a1",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "955278aa-5491-4f44-af8a-238211057bf8",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/EazyBank/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/EazyBank/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "f8484873-068d-4692-8c15-92e62cf9bc7c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c1460f56-6fcd-4786-a2c5-6722739b98f3",
      "clientId": "ui-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:4200/dashboard"
      ],
      "webOrigins": [
        "http://localhost:4200"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "http://localhost:4200/home",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "a1d8ceed-203c-4fd1-9d65-5ade95d6696a",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b93fe91e-b0e6-412a-b373-8e5a1d248a28",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "dfaf3725-30c9-44f5-b88a-175b17bea6af",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "a4df66cb-9717-4200-9be1-eadbacf4bd75",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "4f867187-aeab-4fe0-b49e-ecbe1e28256c",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6f381827-2254-4af4-8607-f5ecca8848b4",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4a9bd0b2-2659-4eb2-89e8-9b156f127b01",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "d94af70c-d22d-485d-8a6a-cd127f5eeb53",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "a1092d19-79cc-4361-b758-90bba81e7f20",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "c70c75dc-9e5f-425c-9cf2-459e93b93958",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "2207f277-4c9a-445a-a361-09f04627d82b",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6c4ffccf-f2f8-46ca-8b3f-71e351b63b22",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "44357ffe-d886-4040-849d-b45723ae0e91",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "9e8ac5f7-3a13-499b-b9a0-648675c3e46d",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5e539c83-9a9f-45ba-96e1-98fc1e8fe44b",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08d866c9-c5db-4220-bfcc-0591ae0a255b",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "80263f4a-f891-443f-945c-2deb447ed8e1",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "8036e89b-6554-47da-aeea-832f4a19b4b1",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6cc17013-6e8b-4a1f-b6e7-7ec20c7d76dd",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "32b6c1e8-c127-4aa4-b876-7b6003702d3b",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "30bbe746-0d0f-4da3-8c18-5f89a68bad5c",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3b602a68-94cf-4bca-8a38-c2da24c0edba",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "89950a45-3dda-4ebc-9053-c520cda562f6",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eebf5586-c972-4ce8-be46-749280722b7a",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "58679e2a-18ef-45b1-88f5-9e2e69c20413",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f5ac2bc2-9b2e-4ddb-b3c2-1dfda367471e",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "cd4a86a4-a516-4bc6-88fe-9a2ff7588ad4",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3a7cfd49-45e1-4bad-83b5-f4dac874a354",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "815a7505-1598-4f74-8525-d3b56c9d2e4a",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6978623b-8b40-4237-99e0-cfd7da8171cc",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "0576d034-7d8b-48ad-835f-30e922c8ba85",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cf8528f5-c09e-43d2-97f1-feaa8e460682",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "477dc4ae-a3c0-4ecf-9f55-7aafe9c34b55",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "430dd58e-ca77-4078-8eeb-ee3f57c5d44a",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "c033ddcf-5567-4e14-8564-e9f6058cb937",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "3bf61b47-780d-494a-9859-8e4ae4929fbb",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "798ba159-3b26-4bca-b48d-1c5e9ad4524d",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "66a88a4d-26eb-4bd9-8192-be71b744488b",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "2546dd28-4f59-4be3-b0b4-fa36dc8aec32",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "e4a6a1fa-40d3-4bac-9ab4-9226859c91b0",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "e8f520bc-5092-4d37-b087-eb3ce3b51ee3",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "dc7e21e2-eedd-45fb-a16d-1939d84fe71b",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "ef07492f-f567-479d-8fb1-1fde466da12d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "b24a6db5-4d65-4ec5-b7ef-3278e26ab8c2",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "6bc788ab-c03e-46ac-97c6-5659d3af36e9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "7d040094-7946-4294-bae5-c1fa624fc0ed",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAjmEQqEDGRcqg0nlDl2Ta5j/kuDeu2sX+xoQ28lDzW4dpDcbYzXiufKAPRce9WSoSJwFJPq48Zo/0OCgkxiMr8S943OFCsINrLRtEEZQRtUZeDqtVIBmF27vIosZwsDknG+dk0bhsmTKV7ATIm+JSEQZB/dYtsy3iErnnR8FSOGO9SMu88ElpoFByU2YMllWpxswRoMkSveCPqenl4jkHeL/T796gHcceMsF2jEXKdaROb4+HJwZgZX0lDKjUsZUvytnRwuIN4/OVe85IyUZp+o8XbVPu7ASUlJ9OobwOzOsL6bMB6v2dP1gqIJk4CgYRoSZ2gwt2ChguZxArvd7ABwIDAQABAoIBAAsJ2XnB891LVWacAjKFnjcFsxzZLFRHz3XioEPvJL7u46UuynY7qgN9gVGep7529YtSnTQf3AzzkjKcYiV+apS7Ynp1eG8o8TFBEOjv+uN7/iTTAbmIYQllKKv+CJSRCcgvC3D7BGhoNJlk0YzMYiJxwsIETey7XPCouxakFVTLwTCjIKvO3dcUugnU0E/MwnocsnygXOf0NG7cracWt3+3dDbb16iSx6dAXNvm7OitqHGC5Vgn31yxmYo5k5X1pYpc0DD5bqR24KKRtdMks4cmauSf7q5GivIS6Z6uwu1d7ytBEm2hlFMnM/CkS4pLSyV5GFUO2YcjgSjQYHK2aHECgYEAwgBOdND2rE3tYoxNDwBOpOE1U6ir54TmZ4Eb6s4D3n8hBPvcU3+E4mZRAqclf49hnaOJAIhpxGYF6FA642RFdovTUIZH5nQGvbRfkgP732QtsN05UKbOaVIN3qe4UHmLLuA1DABkTPub/4jMIT7OMpnnuR9KKdd/MmY42CSSG88CgYEAu+FwRGWuqEOYkC2JCXIZpa2NpI849DAA1qKTnES1aFYGzdQ2xevgx6mSqGGviw7XXfUfHtON3we7CsOg4992i1iaQKfJlaG6gSWVFieQPRrKs1h9NDO3mAHu0GGVn8lhWRKMiZsxk1bA5dOyEvxAAtzpGOD//vW7e3VNKTi4jkkCgYBg6QpILIKsvBjTW8a6saqXjrC249FLzAXUupgZiWRBZzw1YyNCyra06euZ6ak/uX5H4wNzMrGzHEvjKwDfyp0whNTAqvOL2XXsmggLxtWxWDfC3B/ffBQsZILtMNdPzAeNGQ8muaNhGWdqFQnzqY4TlPI+dbT0hePSZ2IKBuq93QKBgDTWdttVeWQq9nn9xF9armnQwFf6S3spEONL/5VgIWCBaRJzzx+kcafVQcCHEHZcKydqa2Eg//IsW2bwk4viaZVQyrjKN0AUpr3xUtdTMxZsNXtwtG186fIfAQmrmAfC+9SwCcQdWDjmmgNIoPkD5gCoHgn4JSaP9zUGTTf9krG5AoGADOY2ZEwcRsjecoe5hUOwQokr7vk1COOZEbnJ0aXuhgC84K8+SoUDIQFsFi3SgknZm6qOwLXD/xqeb4RL69XFaaOp1nfhHnWX7KmgWoz3uyw2QlAhdAMkuVmsmYT/m78HsPU65wsYp7FqSfjaj7toDmUEMxrbKalLVC8tfdWqnSk="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICnzCCAYcCBgGMWYNq9DANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhFYXp5QmFuazAeFw0yMzEyMTExNTMyMTRaFw0zMzEyMTExNTMzNTRaMBMxETAPBgNVBAMMCEVhenlCYW5rMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjmEQqEDGRcqg0nlDl2Ta5j/kuDeu2sX+xoQ28lDzW4dpDcbYzXiufKAPRce9WSoSJwFJPq48Zo/0OCgkxiMr8S943OFCsINrLRtEEZQRtUZeDqtVIBmF27vIosZwsDknG+dk0bhsmTKV7ATIm+JSEQZB/dYtsy3iErnnR8FSOGO9SMu88ElpoFByU2YMllWpxswRoMkSveCPqenl4jkHeL/T796gHcceMsF2jEXKdaROb4+HJwZgZX0lDKjUsZUvytnRwuIN4/OVe85IyUZp+o8XbVPu7ASUlJ9OobwOzOsL6bMB6v2dP1gqIJk4CgYRoSZ2gwt2ChguZxArvd7ABwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCOKLQmTVZOYSq2lc5VAMQbjh0tu7czxq3hDH6sGiZUv3Ovk7Gpvf1M9DYXgVtwqPGaLP7572tM8HF91xQilsfn86bTh9aFuHvbg8EykUzkUmNHMS6FKJaNBEK4vtHBbWco8cDH9UZZWlEfOq0hgrzZrFh72NEx+LI86TfLm6WoSWfiA0k06H/PqjHxJZiL0hfTsDZDyBi+NoUQIRx1i1BA/Zl1u+R2lP1cgJ6Y908CpiWVCS/p/1qBL6Oh0mGxqEcU7kLM3Z/X8df+EPQ7w7WyW6+Nd1KYprGlT0lW+ZgMSNE7V4NjCfkYYygok8tAepuT/BDX512yPErBhFrr99Ud"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "a589c711-aee6-49a5-b2c8-adb8eb255885",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAzcMeO3AhsuURrCr3GdysQ1KH24wLIBgLvrPXrpk98bZ2mxz/hBrqyTmAPcc4Di/LEzs4J67Ed7Z3/fJPiaaskG19XlN+tqymRIiGIkPWYgI+gtP58Ne+qHni0W1aYspshOerELhe/1QFnMbcJdKsibwZmSIxxe/jeqwuglxNgZfKYSttrG2NgE5wT5SpLv7bBn6go03Z7ZJO9zGJS5iZcdo68WH20z8A/yB5zA5n0xTA/J8ZakHiIZl2ImwhzoY8Sxvw0dU76h0zgowVapLVsLNhPjy0YvMW2BklwVRQGSkpXRJxajH1r370SwYgVqlj3MdMWJmv0TAxhRpwyNqcEwIDAQABAoIBAA31MBt8wMcfjjJX+8kk/16AaQzglBn0558ObhFpqG+5c+mTxFV+yfHP1ROGbGwHRpxNsRfSstXNaphZvpbU1/Hi1iqhjqqaTZu/3cbR7pIEGvTJp7PJvs+I7R+jGQrd4RH8RnjCOQIoU0p48ZLIlsGvy9YSdr6O8PxvqlFXgj50dpoBsqXLpo4ttCyHs18K3yj36gKBiFF6mZrsSOgFC80HNHKKvNq1GplXxuEAwDMWHgeb/hhcsndRM5ZvmOmYmIRS94Ie87MjVkLxrNmiZZXdZy8/cwsgYImQ09teGsdEcXfbnUZvO91OABvllXVPVlTJPHSe5C/Hno1CEtHAPmkCgYEA+jQuYSvj5hFsMurbbvGTVRKIFLiGZx25NfKFH3FFOjOQSSAMQbJK5YSfpEszkRqvYJTs+IKXaU57LYNCOoMPss39DmL1Ll52dfn54CNvFc8kkbs1lQFwZqLuV7ChmxXBzGtB85IdvGsiu9/5zSJvH6P0DTMoxk3mg3SStKdMnEcCgYEA0odg3LKyDtNkPpvDFH+qjAwCgZDvjm61UF1qwhe2j759dH2imRQsGZJcHvR8aIN6I3pBfeII3MBnRHo0BKu26N83WSW8aywUJX6/QDN4U/j09kk8AadMKAFW8pnJ+1wW/aUH4UAuWYWD0ID8eAt4RFR9kRPboHAzQrcuYQYaQ9UCgYEApbKtDHlOomzjZQ0YaW7fDbYKHP7fM6cBo3KLKvmOyS6g3Wy18UQsSbf9KYcMDYrInoPCNAn4UCtDdC67S5jEarv0XPS4Pw8cEKGOFBwjUyQtqb17jMS5NZ+tjLFTNSvBfqmBsdcQjlm9VQLNokatpRylYaCB3mJ0yJYJGk65c70CgYAJgjPNxARmxwVwDnjxJBL/4Er8rx8iv71Qs+dufMOyGlhwOnxtjYuwW/vtKf20eru5fnwWw27DCa2gWiSfUWIhgnNtg1bPQF5okyDwNWLp6ASoWwZqzLOT2vuiWW/V+oLPUfTZJ5zwTid1811zzpDQBUDmnI7+4BJwoPVnTG9DQQKBgD96ciJ5LcBXNnD6GXIO5YZQehg/qECr0vuKV0b/ZKOxmSLkzbPLDMYD841g/wPCpiYOURzf4jXRDeayYFj6PaBuJrd/YNPOHZiiFzCGM50JnNtWkqOUc8qZx2pDr8btxY8HFHuJC9eRPmDEr5rMol61KUcKp68u4mV+RqAXMbYc"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICnzCCAYcCBgGMWYNrWjANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhFYXp5QmFuazAeFw0yMzEyMTExNTMyMTRaFw0zMzEyMTExNTMzNTRaMBMxETAPBgNVBAMMCEVhenlCYW5rMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzcMeO3AhsuURrCr3GdysQ1KH24wLIBgLvrPXrpk98bZ2mxz/hBrqyTmAPcc4Di/LEzs4J67Ed7Z3/fJPiaaskG19XlN+tqymRIiGIkPWYgI+gtP58Ne+qHni0W1aYspshOerELhe/1QFnMbcJdKsibwZmSIxxe/jeqwuglxNgZfKYSttrG2NgE5wT5SpLv7bBn6go03Z7ZJO9zGJS5iZcdo68WH20z8A/yB5zA5n0xTA/J8ZakHiIZl2ImwhzoY8Sxvw0dU76h0zgowVapLVsLNhPjy0YvMW2BklwVRQGSkpXRJxajH1r370SwYgVqlj3MdMWJmv0TAxhRpwyNqcEwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCGQ1WN7iTMVZfCqFWv5Q3MgguN26VnsUhtVmbsb5QHjxBAhjDC+N2VkweLzIY9OsGris5+wJsFSQt+xFzPVEc4mbwRDnntkAXp2x6Ox9hihC7hfgn5c/Wkde56VygfoesZMkdgG6H7gAjUUxFFr4kg3wfsIjGQgYdTca109V6ZlzPAJaK6eDoQT8eW1+7j7HvHF5Lc+o2cTXFaXXp7YO78plMfm6FsIDzq2t7i0KGrhQgfR1ymmAlKSUOqUeHVtxDY3r9639xtVfH+VHxg0lDw+M4DSiUPj19/pZGJXn1oIwTvaXoFANNd8cFOeMTLDm1bWz9Qz2pfVRtwS/tlxKSQ"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "07275313-33d7-4079-af8c-67c6b0069e33",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "9da812af-9bb8-4882-b9a2-aa4d27407b7b"
          ],
          "secret": [
            "GtEXr5Wo8HmX-I3DQ902pg"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "1c15d99c-3f1b-4f2c-8b2e-76e0596379b7",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "f8ee80f0-b439-4493-ad76-da442f41be31"
          ],
          "secret": [
            "nwOLMagoSD82pwvPwRT55Fv1-AFoYA7yu2qqnMvEVJqAI0FO32QTcF_7H_nrQ7nwsEOam42yyTDWPQGljmoZHg"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "bdc8e764-f729-40c0-b26e-3e2c3e68a96f",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "405b055d-beb2-4d44-9485-16dc2cf8e114",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "804cd0ca-765d-4ce6-80d8-00550ce82314",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "28ecc491-4ad0-4da4-ba1a-ddcd131f96d8",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "149378f3-d815-44cf-b032-8f5cdcfccadf",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2d62b82c-65a7-4f45-9f61-c60d80c7186e",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "82486525-64ee-425e-9213-be59334e3b56",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d2d2757c-8a50-4b65-b53f-8828b120971e",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b796f264-06a3-4f3d-ab19-3507841425a6",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "932bcc35-8835-40f6-9276-8a0461e1f27e",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "db70883d-fc2f-4bc3-b15a-bfa5d1bec50c",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b46fbae7-92f3-43fb-b720-7609dedfb9b1",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "92b1619d-d80c-4401-bf6a-8ff416901e69",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "86e71df9-d9f7-4918-9794-1c855f6727e7",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "882ce573-f281-42b3-9bfb-028d38a7e5fe",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5ef9cb8d-7c17-4eaf-be11-e8ff2efe3faa",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ea3c85ff-4349-42ef-9fd7-8244c46fde44",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "55ad2963-5541-4372-bf5b-563950dbc183",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "24b2c347-830e-46e0-81b5-d1cd42d74be8",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "0473150d-82ac-4593-a86d-f306b8f9ec87",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "22.0.5",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}